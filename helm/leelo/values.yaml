# Default values for leelo
replicaCount: 1

image:
  repository: ghcr.io/ulm0/leelo
  pullPolicy: IfNotPresent
  tag: "" # Will use appVersion from Chart.yaml

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 80
  targetPort: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: leelo.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

persistence:
  enabled: true
  type: "pvc" # Options: "pvc", "hostPath", "emptyDir"
  
  # PVC Configuration
  pvc:
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 1Gi
  
  # HostPath Configuration
  hostPath:
    path: "/data/leelo"
    type: "DirectoryOrCreate"
  
  # EmptyDir Configuration (for testing only)
  emptyDir: {}

env:
  NODE_ENV: production
  DATABASE_URL: file:/data/leelo.db
  ASSETS_PATH: /data/assets
  FONTS_PATH: /data/fonts
  JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
  ADMIN_USERNAME: admin
  ADMIN_PASSWORD: admin
  BASE_URL: http://localhost:3000

nodeSelector: {}

tolerations: []

affinity: {}

# Deployment strategy configuration
deployment:
  strategy:
    type: "Recreate" # Options: "Recreate", "RollingUpdate"
    rollingUpdate:
      maxSurge: "25%" # Only used when type is "RollingUpdate"
      maxUnavailable: "25%" # Only used when type is "RollingUpdate"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

livenessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3